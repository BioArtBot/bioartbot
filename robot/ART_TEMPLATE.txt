from opentrons import labware, instruments, robot

metadata = {
    'protocolName': 'CCL ARTBot',
    'author': 'Tim Dobbs and Counter Culture Labs',
    'source': 'ARTBot Protocol Builder'
    }

def distribute_to_agar(self, vol, source, destination, disposal_vol):

    dest = list(destination) #allows for non-lists

    for cnt, well in enumerate(dest):
        if not self.current_tip():
            self.pick_up_tip()

        if self.current_volume < vol:
            remaining_wells = len(dest) - cnt
            remaining_vol = remaining_wells * vol

            if remaining_vol > self.max_volume:
                asp_vol = math.floor(self.max_volume / vol) * vol
            else:
                asp_vol =  remaining_vol

            self.aspirate(asp_vol, source)

        self.dispense(vol, well, 0.25)

        dip_position = robot._driver.position
        dip_position['Z'] = dip_position['Z'] - 7
        robot._driver.move(dip_position)

    self.drop_tip()

# a 6-well plate for all of the colors in our pallette
palette = labware.load('falcon_6_wellplate_15.5ml_flat', 1)

# a tip rack for our pipette
p200rack = labware.load('tiprack-200ul', 10)

# colored culture locations
palette_colors = dict(
    pink = palette.wells('A1')
    ,blue = palette.wells('A2')
    ,teal = palette.wells('A3')
    ,orange = palette.wells('B1')
    ,yellow = palette.wells('B2')
    )

color_locations = %%WELLS GO HERE%%

# plate to create art in
plate = labware.load('CCL_ARTBot_canvas', 5)

# wells to dispense each color material to
canvas_wells = dict()
for color in color_locations:
    canvas_wells[color] = [well.top() for well in plate.wells(color_locations[color])]


def run_custom_protocol(
        pipette_axis: 'StringSelection...'='left'):

    p300 = instruments.P300_Single(
            mount=pipette_axis,
            tip_racks=[p200rack]
    )

    for color in color_wells:
        distribute_to_agar(p300, 1, palette_colors[color], canvas_wells[color], disposal_vol=0)

run_custom_protocol(**{'pipette_axis': 'left'})

