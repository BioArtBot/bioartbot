"""add lab_objects table

Revision ID: 5232f48e49c1
Revises: ba196fd05ecc
Create Date: 2021-07-29 05:46:07.014025

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from migrations.utils.session import session_scope

# revision identifiers, used by Alembic.
revision = '5232f48e49c1'
down_revision = 'ba196fd05ecc'
branch_labels = None
depends_on = None



Base = declarative_base()

class LabObjectsModel(Base):
    __tablename__ = 'lab_objects'

    id = sa.Column(sa.Integer, primary_key=True)
    name = sa.Column(sa.String(50), nullable=False, unique=True, index=True)
    obj_class = sa.Column(sa.String(50), nullable=False)
    properties = sa.orm.relationship('LabObjectPropertyModel', backref='object', lazy='dynamic')

    def __repr__(self):
        return '<%r: %r>' % (self.obj_class, self.name)

class LabObjectPropertyModel(Base):
    __tablename__ = 'lab_object_properties'

    id = sa.Column(sa.Integer, primary_key=True)
    object_id = sa.Column(sa.Integer, sa.ForeignKey('lab_objects.id'))
    obj_property = sa.Column(sa.String(50), nullable=False)
    obj_property_units = sa.Column(sa.String(20), nullable=True)
    property_value_num = sa.Column(sa.Float, nullable = True)
    property_value_str = sa.Column(sa.String(255), nullable=True)
    

    def __repr__(self):
        return '<%r: %r>' % (self.name,
                            self.property_value_num or self.property_value_str)


_Model = LabObjectsModel
_ParamModel = LabObjectPropertyModel

class LabObject():    
    @classmethod
    def _create(cls, name, obj_class, property_list: list):
        properties = [_ParamModel(**prop) for prop in property_list]
        with session_scope() as session:
            session.add(_Model(name=name, obj_class=obj_class, properties=properties))
    


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lab_objects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('obj_class', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_objects_name'), 'lab_objects', ['name'], unique=True)
    op.create_table('lab_object_properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('obj_property', sa.String(length=50), nullable=False),
    sa.Column('obj_property_units', sa.String(length=20), nullable=True),
    sa.Column('property_value_num', sa.Float(), nullable=True),
    sa.Column('property_value_str', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['object_id'], ['lab_objects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    properties = [
        {'obj_property': 'x_radius', 'obj_property_units': 'mm', 'property_value_num':52.5},
        {'obj_property': 'y_radius', 'obj_property_units': 'mm', 'property_value_num':35},
        {'obj_property': 'z_touch_position', 'obj_property_units': 'frac', 'property_value_num':-0.5},
        {'obj_property': 'shape', 'property_value_str':'rectangular'},
    ]   
    LabObject._create('ccl_artbot_canvas','labware', properties)
    
    properties = [
        {'obj_property': 'x_radius', 'obj_property_units': 'mm', 'property_value_num':40},
        {'obj_property': 'y_radius', 'obj_property_units': 'mm', 'property_value_num':40},
        {'obj_property': 'z_touch_position', 'obj_property_units': 'frac', 'property_value_num':0.273},
        {'obj_property': 'shape', 'property_value_str':'round'},
    ]   
    LabObject._create('ccl_artbot_canvas_90mm_round','labware', properties)

    properties = [
        {'obj_property': 'x_radius', 'obj_property_units': 'mm', 'property_value_num':25},
        {'obj_property': 'y_radius', 'obj_property_units': 'mm', 'property_value_num':25},
        {'obj_property': 'z_touch_position', 'obj_property_units': 'frac', 'property_value_num':0.273},
        {'obj_property': 'shape', 'property_value_str':'round'},
    ]   
    LabObject._create('ccl_artbot_canvas_60mm_round','labware', properties)

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lab_object_properties')
    op.drop_index(op.f('ix_lab_objects_name'), table_name='lab_objects')
    op.drop_table('lab_objects')
    # ### end Alembic commands ###
